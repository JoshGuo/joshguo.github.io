{"version":3,"sources":["Tools.js","components/Header.js","components/FadeInListItem.js","components/FadeInList.js","components/ProjectList.js","components/App.js","serviceWorker.js","index.js"],"names":["isMobile","test","navigator","userAgent","substr","Header","props","styles","main","fontSize","position","top","backgroundColor","color","fontColor","zIndex","line","marginTop","height","width","lineColor","style","animateIn","duration","animateOnce","name","FadeInListItem","textWrapper","whiteSpace","margin","delay","attribute","FadeInList","overflow","attributes","map","element","index","key","ProjectList","json","require","App","headerWrapper","paddingLeft","paddingTop","window","screen","paddingBottom","arrow","marginBottom","projectWrapper","data","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"siBAAO,SAASA,IACZ,SACI,qUAAqUC,KAAKC,UAAUC,aACjV,0kDAA0kDF,KAAKC,UAAUC,UAAUC,OAAO,EAAE,K,oBC2BxmDC,MA1Bf,SAAgBC,GACZ,IAAIC,EAAS,CACTC,KAAM,CACFC,SAAUT,IAAa,OAAS,QAChCU,SAAU,SACVC,IAAK,MACLC,gBAAiBN,EAAMM,gBACvBC,MAAOP,EAAMQ,UACbC,OAAQ,GAEZC,KAAM,CACFC,UAAW,OACXC,OAAQlB,IAAa,OAAS,OAC9BmB,MAAOnB,IAAa,MAAQ,MAC5BY,gBAAiBN,EAAMc,YAI/B,OACI,yBAAKC,MAAOd,EAAOC,MACf,kBAAC,IAAD,CAAiBc,UAAU,aAAaC,SAAU,EAAGC,aAAa,GAAOlB,EAAMmB,MAC/E,kBAAC,IAAD,CAAiBJ,MAAOd,EAAOS,KAAMM,UAAU,aAAaE,aAAa,MCHtEE,MAlBf,SAAwBpB,GACpB,IAAIC,EAAS,CACToB,YAAa,CACTC,WAAY,WACZC,OAAQ7B,IAAa,SAAW,YAIxC,OACI,yBAAKqB,MAAOd,EAAOoB,aACf,kBAAC,IAAD,CAAiBL,UAAU,WAAWC,SAAU,EAAGC,aAAa,EAAMM,MAAO9B,IAAa,IAAM,KAC3FM,EAAMyB,aCMRC,MAjBf,SAAoB1B,GAChB,IAAIe,EAAQ,CACRb,KAAM,CACFC,SAAUT,IAAa,OAAS,OAChCiC,SAAU,SAIlB,OACI,yBAAKZ,MAAOA,EAAMb,MACbF,EAAM4B,WAAWC,KAAI,SAACC,EAASC,GAAV,OAClB,kBAAC,EAAD,CAAgBN,UAAWK,EAASE,IAAKD,SCC1CE,MAdf,WAOI,OACI,qDCFJC,EAAOC,EAAQ,IAwCJC,MAtCf,WACI,IAAInC,EAAS,CACToC,cAAe,CACXC,YAAa5C,IAAa,KAAO,MACjC6C,WAAYC,OAAOC,OAAO7B,OAAO,EAAI,KACrC8B,cAAeF,OAAOC,OAAO7B,OAAO,EAAI,KACxCN,gBAAkB,WAEtBqC,MAAO,CACHxC,SAAUT,IAAa,OAAS,OAChCkD,aAAcJ,OAAOC,OAAO7B,OAAO,EAAI,MAE3CiC,eAAgB,CACZP,YAAa5C,IAAa,KAAO,MACjC6C,WAAYC,OAAOC,OAAO7B,OAAO,EAAI,KACrCN,gBAAiB,UACjBM,OAAQ,WAIhB,OACI,6BACI,yBAAKG,MAAOd,EAAOoC,eACf,kBAAC,EAAD,CAAQlB,KAAMe,EAAKY,KAAK3B,KAAMb,gBAAiB,UAAWE,UAAW,OAAQM,UAAW,SACxF,kBAAC,IAAD,CAAiBC,MAAOd,EAAO0C,MAAO3B,UAAU,SAASQ,MAAO,IAAMN,aAAa,GAAnF,UACA,kBAAC,EAAD,CAAYU,WAAYM,EAAKY,KAAKlB,cAGtC,yBAAKb,MAAOd,EAAO4C,gBACf,kBAAC,EAAD,CAAQ1B,KAAM,iBAAkBb,gBAAiB,UAAWE,UAAW,UAAWM,UAAW,YAC7F,kBAAC,EAAD,SC5BIiC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmB1D,WACrBA,UAAU2D,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.004b21af.chunk.js","sourcesContent":["export function isMobile() {\r\n    if(\r\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) \r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))\r\n    ) { \r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import React from 'react';\r\nimport { isMobile } from '../Tools';\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\n\r\nfunction Header(props) {\r\n    let styles = {\r\n        main: {\r\n            fontSize: isMobile() ? '45pt' : '100pt',\r\n            position: 'sticky',\r\n            top: '0px',\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.fontColor,\r\n            zIndex: 1\r\n        },\r\n        line: {\r\n            marginTop: '10px',\r\n            height: isMobile() ? '10px' : '15px',\r\n            width: isMobile() ? '35%' : '15%',\r\n            backgroundColor: props.lineColor\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={styles.main}>\r\n            <ScrollAnimation animateIn='fadeInLeft' duration={1} animateOnce={true}>{props.name}</ScrollAnimation>\r\n            <ScrollAnimation style={styles.line} animateIn='fadeInLeft' animateOnce={true}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { isMobile } from '../Tools';\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\n\r\nfunction FadeInListItem(props) {\r\n    let styles = {\r\n        textWrapper: {\r\n            whiteSpace: 'pre-wrap',\r\n            margin: isMobile() ? '50px 0' : '100px 0'\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div style={styles.textWrapper}>\r\n            <ScrollAnimation animateIn='fadeInUp' duration={1} animateOnce={true} delay={isMobile() ? 100 : 300}>\r\n                {props.attribute}\r\n            </ScrollAnimation>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FadeInListItem;","import React from 'react';\r\nimport FadeInListItem from './FadeInListItem';\r\nimport { isMobile } from '../Tools';\r\n\r\nfunction FadeInList(props) {\r\n    let style = {\r\n        main: {\r\n            fontSize: isMobile() ? '20pt' : '40pt',\r\n            overflow: 'wrap',\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={style.main}>\r\n            {props.attributes.map((element, index) => (\r\n                <FadeInListItem attribute={element} key={index}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FadeInList;","import React from 'react';\r\n\r\nfunction ProjectList() {\r\n    let styles = {\r\n        wrapper: {\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Content Coming Soon\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\nimport { isMobile } from '../Tools';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nimport Header from './Header';\nimport FadeInList from './FadeInList';\nimport ProjectList from './ProjectList'\n\nvar json = require('../data.json');\n\nfunction App() {\n    let styles = {\n        headerWrapper: { \n            paddingLeft: isMobile() ? '5%' : '20%',\n            paddingTop: window.screen.height/4 + \"px\",\n            paddingBottom: window.screen.height/4 + \"px\",\n            backgroundColor:  '#f5ead7'\n        },\n        arrow: {\n            fontSize: isMobile() ? '40pt' : '80pt',\n            marginBottom: window.screen.height/2 + \"px\",\n        },\n        projectWrapper: {\n            paddingLeft: isMobile() ? '5%' : '20%',\n            paddingTop: window.screen.height/4 + \"px\",\n            backgroundColor: '#171616',\n            height: \"1000px\"\n        }\n    } \n\n    return (\n        <div>\n            <div style={styles.headerWrapper}>\n                <Header name={json.data.name} backgroundColor={'#f5ead7'} fontColor={'#000'} lineColor={'#000'}/>\n                <ScrollAnimation style={styles.arrow} animateIn='fadeIn' delay={3000} animateOnce={true}>&#8595;</ScrollAnimation>\n                <FadeInList attributes={json.data.attributes} />\n            </div>\n\n            <div style={styles.projectWrapper}>\n                <Header name={\"Projects (WIP)\"} backgroundColor={'#171616'} fontColor={'#f5e5c9'} lineColor={'#f5e5c9'}/>\n                <ProjectList />\n            </div>\n            \n        </div>\n        \n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}